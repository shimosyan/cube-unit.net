name: terraform-deploy

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/terraform**
      - terraform/**
      - tfaction-root.yaml

concurrency:
  group: terraform-deploy # デプロイ先が1つしかないため repo 内で排他制御
  cancel-in-progress: false

env:
  TFACTION_IS_APPLY: "true"

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read # artifact を取得するために必要

jobs:
  # terraform-pull-request.yaml と同様に setup で変更のあった作業ディレクトリを取得し、outputs で出力する
  setup:
    runs-on: ubuntu-latest
    environment: main

    outputs:
      targets: ${{ steps.list-targets.outputs.targets }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # aqua を使って必要なツールをインストールする
      - uses: aquaproj/aqua-installer@d1fe50798dbadd4eb5b98957290ca175f6b4870f # v4.0.2
        with:
          aqua_version: v2.53.9

      # 変更のあった作業ディレクトリを取得する Action
      - uses: suzuki-shunsuke/tfaction/list-targets@199e524698561cce9e340d94d3b3aac08ba9f99f # v1.18.3
        id: list-targets

  # apply で setup で取得した変更のある作業ディレクトリを並列に実行する
  apply:
    name: "terraform apply (${{ matrix.target.target }})"
    environment: main
    runs-on: ${{ matrix.target.runs_on }}
    needs: setup

    # setup で取得した変更のある作業ディレクトリが空の場合は実行しない
    if: join(fromJSON(needs.setup.outputs.targets), '') != ''

    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.setup.outputs.targets) }}

    env:
      TFACTION_TARGET: ${{matrix.target.target}}
      TFACTION_WORKING_DIR: ${{matrix.target.working_directory}}
      TFACTION_JOB_TYPE: ${{matrix.target.job_type}}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - uses: aquaproj/aqua-installer@d1fe50798dbadd4eb5b98957290ca175f6b4870f # v4.0.2
        with:
          aqua_version: v2.53.9
        env:
          AQUA_GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      # GitHub Secrets を TFAction に渡す Action
      - uses: suzuki-shunsuke/tfaction/js@199e524698561cce9e340d94d3b3aac08ba9f99f # v1.18.3
        with:
          action: export-secrets
          secrets: ${{ toJSON(secrets) }}

      - run: tfaction get-or-create-drift-issue
        # CHECK: You can remove this step if you don't use drift detection
        shell: bash
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      # terraform init などの準備を行う Action
      - uses: suzuki-shunsuke/tfaction/setup@199e524698561cce9e340d94d3b3aac08ba9f99f # v1.18.3
        with:
          github_token: ${{ steps.app-token.outputs.token }}
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      # terraform apply を実行する Action
      - uses: suzuki-shunsuke/tfaction/apply@199e524698561cce9e340d94d3b3aac08ba9f99f # v1.18.3
        with:
          github_token: ${{ steps.app-token.outputs.token }}
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - uses: suzuki-shunsuke/tfaction/create-follow-up-pr@199e524698561cce9e340d94d3b3aac08ba9f99f # v1.18.3
        if: failure()
        with:
          github_token: ${{ steps.app-token.outputs.token }}

      - uses: suzuki-shunsuke/tfaction/update-drift-issue@199e524698561cce9e340d94d3b3aac08ba9f99f # v1.18.3
        # CHECK: You can remove this step if you don't use drift detection
        if: always()
        with:
          status: ${{job.status}}
          github_token: ${{ steps.app-token.outputs.token }}

  success:
    needs: apply
    if: ${{ !failure() }}
    runs-on: ubuntu-latest

    steps:
      - run: echo "Success!!"
