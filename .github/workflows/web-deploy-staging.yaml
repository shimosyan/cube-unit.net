name: Web Deploy Staging

on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/web**
      - web/**
      - aqua.yaml

concurrency:
  group: ${{ github.workflow }}-web-staging-${{ github.ref }} # 特定の条件しかデプロイしないため PR レベルの排他制御
  cancel-in-progress: true # PR の更新があった場合は前のジョブをキャンセルする

jobs:
  check-need-deploy:
    environment: staging

    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      paths: ${{ steps.filter.outputs.paths }}
    permissions:
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Filter paths
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          # 変更したファイルがいずれかにマッチすれば true
          filters: |
            paths:
              - 'web/**'

  web-build-and-deploy-staging:
    needs:
      - check-need-deploy

    environment:
      name: staging
      url: ${{ vars.BASE_URL }}

    permissions:
      id-token: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: aquaproj/aqua-installer@ea518c135a02fc11ff8024364510c181a5c6b342 # v4.0.3
        with:
          aqua_version: v2.53.9

      - id: app-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@75d2e84710de30f6ff7268e08f310b60ef14033f # v3.0.0
        with:
          hugo-version: '0.123.7'

      - name: Build
        working-directory: web
        run: github-comment exec -k common -var env:Staging -var title:"Build" -- hugo --baseURL "${{ vars.BASE_URL }}"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        if: needs.check-need-deploy.outputs.paths == 'true'
        with:
          role-to-assume: arn:aws:iam::158677943024:role/github_cube-unit.net_web_deploy_staging
          aws-region: ap-northeast-1

      - name: Deploy
        if: needs.check-need-deploy.outputs.paths == 'true'
        working-directory: web
        run: github-comment exec -k deploy-to-s3 -var env:Staging -- aws s3 sync --delete public ${{ vars.S3_URL }}
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Purge Cache - Cloudfront
        if: needs.check-need-deploy.outputs.paths == 'true'
        run: aws cloudfront create-invalidation --distribution-id ${{vars.DISTRIBUTION_ID}} --paths "/*"

      - name: Purge Cache - Cloudflare
        if: needs.check-need-deploy.outputs.paths == 'true'
        uses: jakejarvis/cloudflare-purge-action@eee6dba0236093358f25bb1581bd615dc8b3d8e3 # v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_CACHE_PURGE_API_TOKEN }}
          PURGE_URLS: '["${{ vars.BASE_URL }}", "${{ vars.BASE_URL }}/"]'

  success:
    needs: web-build-and-deploy-staging

    environment: staging

    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - name: Check job result
        run: |
          RESULT="${{ needs.web-build-and-deploy-staging.result }}"
          if [[ $RESULT != "success" && $RESULT != "skipped" ]]; then
            echo "This workflow failed or was cancelled!"
            exit 1
          fi

          echo "Success!!"
          exit 0
