name: web-deploy-production

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/web**
      - web/**

concurrency:
  group: web-production # デプロイ先が1つしかないため repo 内で排他制御
  cancel-in-progress: false

env:
  BASE_URL: https://cube-unit.net
  S3_URL: s3://cube-unit.net
  DISTRIBUTION_ID: E34AL3HHOWXR5P

jobs:
  deploy-production:
    environment: main
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      actions: read # artifact を取得するために必要
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - id: app-token
        uses: actions/create-github-app-token@0f859bf9e69e887678d5bbfbee594437cb440ffe # v2.1.0
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - uses: aquaproj/aqua-installer@d1fe50798dbadd4eb5b98957290ca175f6b4870f # v4.0.2
        with:
          aqua_version: v2.53.9
        env:
          AQUA_GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@75d2e84710de30f6ff7268e08f310b60ef14033f # v3.0.0
        with:
          hugo-version: '0.123.7'

      - name: Build
        working-directory: web
        run: github-comment exec -k common-error -var env:Production -var title:"Build Failed" -- hugo --minify
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::158677943024:role/github_cube-unit.net_web_deploy_production
          aws-region: ap-northeast-1

      - name: Deploy
        working-directory: web
        run: github-comment exec -k deploy-to-s3 -var env:Production -- aws s3 sync --delete public ${{ env.S3_URL }}
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Purge Cache - Cloudfront
        run: aws cloudfront create-invalidation --distribution-id ${{env.DISTRIBUTION_ID}} --paths "/*"

      - name: Purge Cache - Cloudflare
        uses: jakejarvis/cloudflare-purge-action@eee6dba0236093358f25bb1581bd615dc8b3d8e3 # v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_CACHE_PURGE_API_TOKEN }}
          PURGE_URLS: '["${{ env.BASE_URL }}", "${{ env.BASE_URL }}/"]'

  success:
    needs: deploy-production
    if: ${{ !failure() }}
    runs-on: ubuntu-latest

    steps:
      - run: echo "Success!!"
